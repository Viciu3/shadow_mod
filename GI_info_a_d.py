#–î–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å –±—ã–ª —Å–¥–µ–ª–∞–Ω –¥–ª—è –≥–∏–ª—å–¥–∏–∏ Meteor
#–ù–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è –∫–∞—Ä–∞–µ—Ç—Å—è -rep.
#–ö–∞—Ç–µ–≥–æ—Ä–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–æ —Ä–∞—Å–ø–æ—Å—Ç—Ä–æ–Ω—è—Ç—å –º–æ–¥—É–ª—å.
#–ü—Ä–æ–¥–∞–∂–∞ –º–æ–¥—É–ª—è –∑–∞–ø—Ä–µ—â–µ–Ω–∞.
#—ç—Ç–æ—Ç –º–æ–¥—É–ª—å –±—ã–ª —Å–æ–∑–¥–∞–Ω —Å–ø–µ—Ü—ã–∞–ª—å–Ω–æ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–∏–ª—å–ª–∏—è–º–∏!
#–∑–∞ —Ä–æ–∑–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –º–æ–¥—É–ª—è _rip(√ó_√ó) ak tg –±—É–¥–µ—Ç 
#Developer: @Yaukais, @Shadow_red1

__version__ = (7, 7, 7)  # meta developer: @Yaukais, @Shadow_red1,

import asyncio
from telethon.tl.types import Message
from telethon import events
from .. import loader, utils

class GI_info_a_dMod(loader.Module):
    strings = {"name": "GI_info_a_d"}

    async def info_ataka_defcmd(self, message: Message):
        """–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–∫–æ–ª—å–∫–æ –∞—Ç–∞–∫–∏ –∏–ª–∏ –∑–∞—â–∏—Ç—ã –ø–æ–ª—É—á–∏—Ç—Å—è –∏–∑ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–∞–Ω–æ–∫."""
        
        reply = await message.get_reply_message()
        if not reply:
            await message.edit("<b>–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –±–∞–Ω–∫–∞—Ö!</b>")
            return

        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–Ω–æ–∫ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        content = reply.message
        try:
            # –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –±–∞–Ω–æ–∫
            lines = content.split('\n')
            for line in lines:
                if "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–Ω–æ–∫:" in line:
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å–ª–æ –∏–∑ —Å—Ç—Ä–æ–∫–∏
                    bank_count = int(line.split(":")[1].strip())
                    break
            else:
                await message.edit("<b>–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–Ω–æ–∫ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏!</b>")
                return
            
            # –î–µ–ª–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–Ω–æ–∫ –Ω–∞ 100, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ç–∞–∫–∏/–∑–∞—â–∏—Ç—ã
            bottle_count = bank_count // 100
            
            # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–∏–ª—å–¥–∏–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
            gi_name = None
            for line in lines:
                if "–ù–∞–∑–≤–∞–Ω–∏–µ –≥–∏–ª—å–¥–∏–∏:" in line:
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∑ —Å—Ç—Ä–æ–∫–∏
                    gi_name = line.split(":")[1].strip()
                    break
            if not gi_name:
                await message.edit("<b>–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–∏–ª—å–¥–∏–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏!</b>")
                return
                
            # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä –≥–∏–ª—å–¥–∏–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
            gi_nomer = None
            for line in lines:
                if "–ì–∏–ª—å–¥–∏—è ‚Ññ" in line:
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä –∏–∑ —Å—Ç—Ä–æ–∫–∏
                    gi_nomer = line.split("‚Ññ")[1].strip()  # –ò–∑–º–µ–Ω–µ–Ω–æ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞
                    break
            if not gi_nomer:
                await message.edit("<b>–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –Ω–æ–º–µ—Ä –≥–∏–ª—å–¥–∏–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏!</b>")
                return    

            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            response = f" –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–∫–∏ –∏–∑:\nüí†–ì–∏–ª—å–¥–∏–∏: {gi_name}\nüìä–ù–æ–º–µ—Ä –≥–∏–ª—å–¥–∏–∏: ‚Ññ<code>{gi_nomer}</code>\n\nü´ô–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–Ω–æ–∫: <code>{bank_count}</code>\nüöÄ–ü–æ–∫—É–ø–∫–∞ –∞—Ç–∞–∫–∏/–∑–∞—â–∏—Ç—ã: <code>{bottle_count}</code>\n\nüéÆ–ò–≥—Ä–æ–≤–æ–π –±–æ—Ç: <button>@bfgbunker_bot</button>"
            await message.edit(response)

        except Exception as e:
            await message.edit(f"<b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}</b>")

# –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª—å –≤ –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ, —á—Ç–æ–±—ã –µ–≥–æ –º–æ–∂–Ω–æ –±—ã–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.