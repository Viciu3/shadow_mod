__version__ = (7, 7, 9)         
# meta developer: @Shadow_red1, @familiarrrrrr
#         ‚ï≠‚ïê‚ïê‚Ä¢ ‡≥ã‚Ä¢‚úß‡πë‚ô°‡πë‚úß‚Ä¢‡≥ã ‚Ä¢‚ïê‚ïê‚ïÆ
#                  @Yaukais
#               ‚ïî‚ïê‚ïê‚ïó‚ïî‚ïó ‚ô° ‚ô° ‚ô°  
#               ‚ïö‚ïó‚ïî‚ïù‚ïë‚ïë‚ïî‚ïê‚ï¶‚ï¶‚ï¶‚ïî‚ïó
#               ‚ïî‚ïù‚ïö‚ïó‚ïë‚ïö‚ï£‚ïë‚ïë‚ïë‚ïë‚ïî‚ï£  
#               ‚ïö‚ïê‚ïê‚ïù‚ïö‚ïê‚ï©‚ïê‚ï©‚ïê‚ï©‚ïê‚ïù     
#                   ‚ïî‚ïê‚ïê‚ïê‚ïó‚ô™
#                   ‚ïë‚ñà‚ñà‚ñà‚ïë ‚ô´
#                   ‚ïë(‚óè)‚ïë‚ô´
#                   ‚ïö‚ïê‚ïê‚ïê‚ïù ‚ô™
#              ‡Æú€û‡Æú YOU ‡Æú€û‡Æú
#              ‚û∫íã®MùôÄ∆¨ùôÑ”®ùôçíÜô‚û§
#         ‚ï∞‚ïê‚ïê‚Ä¢ ‡≥ã‚Ä¢‚úß‡πë‚ô°‡πë‚úß‚Ä¢‡≥ã ‚Ä¢‚ïê‚ïê‚ïØ

from telethon import events
from .. import loader, utils
import asyncio

@loader.tds
class Room_ghost(loader.Module):
    """–ê–≤—Ç–æ–∫–æ–º–Ω–∞—Ç—ã –æ—Ç –¢–µ–Ω–∏! @familiarrrrrr | –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤ –∫—Ñ–≥.)"""

    strings = {"name": "Ghost-room"}

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "button_row_index",
                0,
                "–ò–Ω–¥–µ–∫—Å —Å—Ç—Ä–æ–∫–∏ –∫–Ω–æ–ø–æ–∫ (0 - –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞, 1 - –≤—Ç–æ—Ä–∞—è)",
                validator=loader.validators.Integer(),
            ),
            loader.ConfigValue(
                "button_column_index",
                0,
                "–ò–Ω–¥–µ–∫—Å –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ (0 - –ø–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞, 1 - –≤—Ç–æ—Ä–∞—è)",
                validator=loader.validators.Integer(),
            ),
            loader.ConfigValue(
                "BFGB_name",
                None,
                "–ò–≥—Ä–æ–≤–æ–µ –∏–º—è –≤ –±–æ—Ç–µ @bfgbunker_bot",
                validator=loader.validators.String(),
            ),
            loader.ConfigValue(
                "target_chat_id",
                5813222348,
                "ID —á–∞—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ—á–∏–Ω–∫–µ –±—É–Ω–∫–µ—Ä–∞.",
                validator=loader.validators.Integer(),
            ),
        )
        self.trigger_active = False

    async def ghostoncmd(self, message):
        """–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ .ghoston <–∏–Ω—Ç–µ—Ä–≤–∞–ª –≤ —Å–µ–∫—É–Ω–¥–∞—Ö> –¥–ª—è –Ω–∞—á–∞–ª–∞ –∫–ª–∏–∫–æ–≤."""
        if not message.is_reply:
            await message.edit('<b>–ù–µ—Ç—É —Ä–µ–ø–ª–∞—è.</b>')
            return

        args = utils.get_args_raw(message)
        try:
            interval = float(args)
        except ValueError:
            interval = 1.5
        
        self.clicker = True
        await message.edit(f'<b><blockquote><emoji document_id=5873127366485610469>üòà</emoji> Ghost-room <emoji document_id=5444900804743939405>ü§©</emoji> –≤–∫–ª—é—á—ë–Ω.<emoji document_id=5785243749969825324>üëª</emoji>\n\n<emoji document_id=5215484787325676090>üïê</emoji> –ò–Ω—Ç–µ—Ä–≤–∞–ª: {interval} —Å–µ–∫—É–Ω–¥.<emoji document_id=5341649649214182916>ü•∞</emoji></blockquote></b>')
        
        while self.clicker:
            reply = await message.get_reply_message()
            if reply and reply.buttons:
                row_index = self.config["button_row_index"]
                column_index = self.config["button_column_index"]

                if row_index < len(reply.buttons) and column_index < len(reply.buttons[row_index]):
                    button = reply.buttons[row_index][column_index]
                    await button.click()
                    await asyncio.sleep(interval)
                else:
                    await message.edit('<b>–£–∫–∞–∑–∞–Ω–Ω—ã–π –∏–Ω–¥–µ–∫—Å –∫–Ω–æ–ø–∫–∏ –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞.</b>')
                    self.clicker = False
                    break
            else:
                await message.edit('<b>–í —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–µ—Ç –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–æ–∫ –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è.</b>')
                self.clicker = False
                break

    async def ghostoffcmd(self, message):
        """–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ .ghostoff –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–ª–∏–∫–µ—Ä–∞."""
        self.clicker = False
        await message.edit('<b><blockquote><emoji document_id=5873127366485610469>üòà</emoji> Ghost-room <emoji document_id=5444900804743939405>ü§©</emoji> –≤—ã–∫–ª—é—á–µ–Ω.<emoji document_id=5785243749969825324>üëª</emoji></blockquote></b>')

    async def ghostinfocmd(self, message):
        """–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ .ghostinfo –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–µ–∂–∏–º–∞—Ö –∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞—Ö —Ç–∞–∫–∂–µ –∫–æ–º–±–∏–Ω–∞—Ü—ã–∏ –Ω–∞–∂–∞—Ç–∏—è."""
        info_message = (
            "[row] [column] –∫—Ñ–≥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞!\n"
            "[ 0 ] [ 0 ] —ç—Ç–æ —Ä–µ–∂–∏–º –∑–∞ –∫—Ä.\n"
            "[ 0 ] [ 1 ] —ç—Ç–æ —Ä–µ–∂–∏–º –∑–∞ –±—É—Ç.\n"
            "[ 1 ] [ 0 ] —ç—Ç–æ +1 –∏–Ω—Ç–µ—Ä–≤–∞–ª 1s\n"
            "[ 1 ] [ 1 ] —ç—Ç–æ +5 –∏–Ω—Ç–µ—Ä–≤–∞–ª 1s\n"
            "[ 2 ] [ 0 ] —ç—Ç–æ +20 –∏–Ω—Ç–µ—Ä–≤–∞–ª 60s\n"
            "[ 2 ] [ 1 ] —ç—Ç–æ +100 –∏–Ω—Ç–µ—Ä–≤–∞–ª 120s\n"
            "[ 3 ] [ 0 ] —ç—Ç–æ +1000 –∏–Ω—Ç–µ—Ä–≤–∞–ª 180s\n"
            "[ 4 ] [ 0 ] —ç—Ç–æ +5000 –∏–Ω—Ç–µ—Ä–≤–∞–ª 180s"
        )
        await message.edit(info_message)

    async def client_ready(self, client, db):
        self.db = db
        self.client = client

        @self.client.on(events.NewMessage(from_users='@bfgbunker_bot'))
        async def trigger_handler(event):
            bfgb_name = self.config["BFGB_name"]
            
            if not bfgb_name:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Ç
                target_chat_id = self.config["target_chat_id"]
                await self.client.send_message(target_chat_id, "–ü–∞—Ä–∞–º–µ—Ç—Ä '–ò–≥—Ä–æ–≤–æ–µ –∏–º—è' –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –µ–≥–æ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º.")
                return

            if f"{bfgb_name}, –≤ –±—É–Ω–∫–µ—Ä–µ –ø—Ä–æ–∏–∑–æ—à—ë–ª –ø–æ–∂–∞—Ä" in event.raw_text or f"{bfgb_name}, –≤ –±—É–Ω–∫–µ—Ä–µ –ø—Ä–æ–∏–∑–æ—à—ë–ª –ø–æ—Ç–æ–ø" in event.raw_text:
                if not self.trigger_active:
                    self.trigger_active = True
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Ç
                    target_chat_id = self.config["target_chat_id"]
                    await self.client.send_message(target_chat_id, "–ü–æ—á–∏–Ω–∏—Ç—å –±—É–Ω–∫–µ—Ä")

                    for _ in range(3):
                        await asyncio.sleep(3)

                    response = await self.client.wait_for(
                        events.NewMessage(from_users='@bfgbunker_bot'),
                        timeout=30
                    )
                    if f"{bfgb_name}, —Ç—ã —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–∏–ª(-–∞) –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–µ" in response.raw_text:
                        self.trigger_active = False